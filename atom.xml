<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>raydied|补坑路</title>
  
  <subtitle>平 常 心 是 道</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://raydied.tk/"/>
  <updated>2018-01-11T18:44:17.147Z</updated>
  <id>http://raydied.tk/</id>
  
  <author>
    <name>Ray Died</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>decorator</title>
    <link href="http://raydied.tk/2018/01/12/decorator/"/>
    <id>http://raydied.tk/2018/01/12/decorator/</id>
    <published>2018-01-11T18:35:37.000Z</published>
    <updated>2018-01-11T18:44:17.147Z</updated>
    
    <content type="html"><![CDATA[<p><hr></p><h2 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">嵌套函数():</span><br><span class="line">    装饰器():</span><br><span class="line">        新功能</span><br><span class="line">    <span class="keyword">return</span> 装饰器</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Author：raydied</span></span><br><span class="line"><span class="comment">#装饰器的本质是函数，（装饰其它函数）</span></span><br><span class="line"><span class="comment">#调用之前，就将函数解释完毕的话，就是正确的</span></span><br><span class="line"><span class="comment">#函数为变量，函数之间可赋值</span></span><br><span class="line"><span class="comment"># def foo():</span></span><br><span class="line"><span class="comment">#     print("in the foo")</span></span><br><span class="line"><span class="comment">#     bar()</span></span><br><span class="line"><span class="comment">#     return 0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># def bar():</span></span><br><span class="line"><span class="comment">#     print("in the bar")</span></span><br><span class="line"><span class="comment">#     return 0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># foo()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#高阶函数，将函数当做实参的函数</span></span><br><span class="line"><span class="comment">#1在不修改被修饰函数的源代码的情况下，为被修饰函数添加功能</span></span><br><span class="line"><span class="comment">#高阶函数--调用中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># def add_f(x,y,f):</span></span><br><span class="line"><span class="comment">#     print("和为",f(x,y))#注意函数调用的时候只有函数的名字，没有小括号</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># def add(a,b):</span></span><br><span class="line"><span class="comment">#     return (a+b)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># add_f(1,-4,add)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 高阶函数--返回值中调用函数，不改变原函数的调用</span></span><br><span class="line"><span class="comment"># import time</span></span><br><span class="line"><span class="comment"># def foo():</span></span><br><span class="line"><span class="comment">#     time.sleep(1)</span></span><br><span class="line"><span class="comment">#     print("in the foo")</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># def test(func):</span></span><br><span class="line"><span class="comment">#     start_time = time.time()</span></span><br><span class="line"><span class="comment">#     func()</span></span><br><span class="line"><span class="comment">#     stop_time = time.time()</span></span><br><span class="line"><span class="comment">#     print("the function runs %ds"%(stop_time-start_time))</span></span><br><span class="line"><span class="comment">#     return test(func)#这里应该返回装饰器函数，但是这样写的话，会成为递归下去，死循环</span></span><br><span class="line"><span class="comment"># #---》解决的办法就是加一层函数（嵌套），然后再返回装饰器函数</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># foo = test(foo)</span></span><br><span class="line"><span class="comment"># foo()</span></span><br><span class="line"><span class="comment">#但是会出现foo函数两次调用，怎么避免呢！？</span></span><br><span class="line"><span class="comment">#嵌套函数，在一个函数体内定义一个新的函数def/区别函数的调用</span></span><br><span class="line"><span class="comment"># def decorator():</span></span><br><span class="line"><span class="comment">#     print("in the decorator")</span></span><br><span class="line"><span class="comment">#     def foo():</span></span><br><span class="line"><span class="comment">#         print("in the foo")</span></span><br><span class="line"><span class="comment">#     foo()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># decorator()</span></span><br><span class="line"><span class="comment">##解决上面的问题：装饰器=高阶函数+函数嵌套</span></span><br><span class="line"><span class="comment"># --》解决了不改变原函数的代码及其调用方式，仍增加函数的功能</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">timer</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span><span class="params">()</span>:</span></span><br><span class="line">        start_time = time.time()</span><br><span class="line">        func()</span><br><span class="line">        stop_time = time.time()</span><br><span class="line">        print(<span class="string">"the function runs %ds"</span>%(stop_time-start_time))</span><br><span class="line">    <span class="comment">#decorator()与下一行的效果等价，本行是函数的正常调用</span></span><br><span class="line">    <span class="keyword">return</span> decorator<span class="comment">#将函数的内存地址（即函数在电脑中的门牌号）获取，</span></span><br><span class="line">    <span class="comment"># 赋值给装饰之前的函数，从而完成原函数的升级</span></span><br><span class="line"><span class="meta">@timer#test = timer(test)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">()</span>:</span></span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    print(<span class="string">"in the test"</span>)</span><br><span class="line"></span><br><span class="line">test()<span class="comment">#装饰之后，原函数已经变成了装饰后的函数，</span></span><br><span class="line"><span class="comment">#方法是 @timer后test函数已经将函数地址变成装饰后的test函数</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&quot;装饰器&quot;&gt;&lt;a href=&quot;#装饰器&quot; class=&quot;headerlink&quot; title=&quot;装饰器&quot;&gt;&lt;/a&gt;装饰器&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;嵌套函数():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    装饰器():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        新功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; 装饰器&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="pythoning" scheme="http://raydied.tk/tags/pythoning/"/>
    
  </entry>
  
  <entry>
    <title>python_shopping_cart</title>
    <link href="http://raydied.tk/2017/12/31/python-shopping-cart/"/>
    <id>http://raydied.tk/2017/12/31/python-shopping-cart/</id>
    <published>2017-12-31T11:44:19.000Z</published>
    <updated>2017-12-31T11:54:09.064Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ol><li>要求顾客根据商品列表选择商品<a id="more"></a></li><li>顾客可以在任何输入情况下离开程序并打印出已购商品</li><li>当顾客的余额不足时，提醒并打印出已购商品<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2></li><li>enumerate函数在打印商品列表时的作用</li><li>着重显示，改变显示字体的背景、颜色等性质<h2 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h2></li><li>代码不够优化，不能减少代码的重复。<strong>调用函数的方法</strong><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a>代码如下</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#失败的</span></span><br><span class="line"><span class="string">'''product_list = [</span></span><br><span class="line"><span class="string">    ("iphone",4800),</span></span><br><span class="line"><span class="string">    ("bycicle",800),</span></span><br><span class="line"><span class="string">    ("iwatch",2300),</span></span><br><span class="line"><span class="string">    ("Mac pro",14800),</span></span><br><span class="line"><span class="string">    ("coffee",31),</span></span><br><span class="line"><span class="string">    ("surface pro",5800),</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">user_salary = input("please input your salary:")</span></span><br><span class="line"><span class="string">for product,price in enumerate(product_list):</span></span><br><span class="line"><span class="string">    print(product,price)</span></span><br><span class="line"><span class="string">shopping_list = []</span></span><br><span class="line"><span class="string">if user_salary.isdigit():</span></span><br><span class="line"><span class="string">    list_num = input("please choose the goods number/[q]:")</span></span><br><span class="line"><span class="string">    if list_num == "q":</span></span><br><span class="line"><span class="string">        print("-------your shopping list-------")</span></span><br><span class="line"><span class="string">        for item in shopping_list:</span></span><br><span class="line"><span class="string">            print(item)</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        list_num = int(list_num)</span></span><br><span class="line"><span class="string">        while True:</span></span><br><span class="line"><span class="string">            if list_num &lt; len(product_list) and list_num &gt;= 0:</span></span><br><span class="line"><span class="string">                if product_list[list_num][1] &lt;= salary:</span></span><br><span class="line"><span class="string">                    salary -= product_list[list_num][1]</span></span><br><span class="line"><span class="string">                    shopping_list.append(product_list[list_num])</span></span><br><span class="line"><span class="string">                else:</span></span><br><span class="line"><span class="string">                    print("还买个鬼，钱不够，只剩[%s]", salary)</span></span><br><span class="line"><span class="string">                    print("-------your shopping list-------")</span></span><br><span class="line"><span class="string">                    for i in shopping_list:</span></span><br><span class="line"><span class="string">                        print(i)</span></span><br><span class="line"><span class="string">else:</span></span><br><span class="line"><span class="string">    print("please check the goods number!")</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">product_list = [</span><br><span class="line">    (<span class="string">"iphone"</span>,<span class="number">4800</span>),</span><br><span class="line">    (<span class="string">"bycicle"</span>,<span class="number">800</span>),</span><br><span class="line">    (<span class="string">"iwatch"</span>,<span class="number">2300</span>),</span><br><span class="line">    (<span class="string">"Mac pro"</span>,<span class="number">14800</span>),</span><br><span class="line">    (<span class="string">"coffee"</span>,<span class="number">31</span>),</span><br><span class="line">    (<span class="string">"surface pro"</span>,<span class="number">5800</span>),</span><br><span class="line">]<span class="comment">#商品列表</span></span><br><span class="line"></span><br><span class="line">shopping_cart = []<span class="comment">#购物车</span></span><br><span class="line"></span><br><span class="line">user_salary = input(<span class="string">"input your salary:"</span>)<span class="comment">#钱包</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> user_salary.isdigit():</span><br><span class="line">    salary = int(user_salary)</span><br><span class="line">    <span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(product_list):</span><br><span class="line">        print(index, item)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        product_num = input(<span class="string">"input the goood's number:"</span>)</span><br><span class="line">        <span class="keyword">if</span> product_num.isdigit():</span><br><span class="line">            goods_num = int(product_num)</span><br><span class="line">            <span class="keyword">if</span> goods_num &gt;= <span class="number">0</span> <span class="keyword">and</span> goods_num &lt; len(product_list):</span><br><span class="line">                <span class="keyword">if</span> salary &gt;= int(product_list[goods_num][<span class="number">1</span>]):</span><br><span class="line">                    salary = salary - product_list[goods_num][<span class="number">1</span>]</span><br><span class="line">                    shopping_cart.append(product_list[goods_num])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">"\033[31;1msorry,you only have [%s].\033[0m"</span>%salary)<span class="comment">#着重显示</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> goods_num == <span class="string">'q'</span>:</span><br><span class="line">                    print(<span class="string">"you have already quit"</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(<span class="string">"check your input"</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> product_num == <span class="string">'q'</span>:</span><br><span class="line">                print(<span class="string">"you have already quit"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"check your input"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> user_salary == <span class="string">'q'</span>:</span><br><span class="line">        exit(<span class="string">"you have already quit"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"check your input"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"-----shopping cart list-----"</span>)</span><br><span class="line"><span class="keyword">if</span> len(shopping_cart) == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"shopping cart is empty"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> index, item <span class="keyword">in</span> enumerate(shopping_cart):</span><br><span class="line">        print(index,item)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;要求顾客根据商品列表选择商品&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="pythoning" scheme="http://raydied.tk/tags/pythoning/"/>
    
  </entry>
  
  <entry>
    <title>油藏描述作业思路</title>
    <link href="http://raydied.tk/2017/12/28/%E6%B2%B9%E8%97%8F%E6%8F%8F%E8%BF%B0%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF/"/>
    <id>http://raydied.tk/2017/12/28/油藏描述作业思路/</id>
    <published>2017-12-28T13:59:55.000Z</published>
    <updated>2017-12-29T16:43:42.162Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h1><h4 id="由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。"><a href="#由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。" class="headerlink" title="由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。"></a>由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。</h4><p>您可以直接或通过邮件的方式咨询。<br><a id="more"></a></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li><strong>petrel</strong> 软件在用于计算 砂泥岩厚度，及其比值（这些值多后期沉积微相的划分）时，可事半功倍。但<strong>petrel 2014</strong>的软件安装费时费力（并不推荐）。</li><li>老师极力推荐<strong>手绘/coreldraw绘图</strong>。这也是我此后得知的，因而我本人不再更改报告的任何细节；谨以此告诫大家。</li><li>在处理数据时，特别是针对22个数据单，有些繁杂；我极力推崇大家采用恰当的<strong>Excel函数</strong>打辅助，并从此迷上自动化。如<a href="https://support.office.com/zh-cn/article/INDIRECT-%E5%87%BD%E6%95%B0-474b3a3a-8a26-4f44-b491-92b6306fa261" target="_blank" rel="noopener">INDIRECT</a>函数等。如果能利用课外时间学习少量的<strong>VBA知识</strong>，也是极好的。</li><li>精力充沛的同学，可以在完成所有任务项之余，再用手清绘一遍，定会直捣黄龙。所以，不要再问到底<strong>什么方法好</strong>的问题。</li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><table><thead><tr><th>步骤</th><th>说明</th><th>工具方法</th><th>备注</th></tr></thead><tbody><tr><td>1.油藏井位十字剖面线</td><td>油藏剖面线、闭合高</td><td>用 Coreldraw 在纵横向将油藏所有井位连接、从纵横向计算同一井位的高差（高差为0，即为闭合 [ 不必验证所有 ]）</td><td>前提</td></tr><tr><td>2. 油层细分对比</td><td>4-1小层的识别、划分（砂泥岩层）、砂岩厚度计算、制表汇总</td><td>依循1中的剖面线将井位排列并识别4-1层（依据三高泥岩段）、砂泥岩划分（半幅法）、petrel划分<em>自动厚度计算/Coreldraw</em>比例尺手动读厚、Excle制表统计</td><td>基础</td></tr><tr><td>3.等值线图</td><td>砂厚、孔隙度、渗透率、含油饱和度的等值线图绘制</td><td>根据由2中的砂岩厚度、及所给公式将孔隙度、渗透率、含油饱和度分别计算，归置四张表内，用<a href="https://www.jianshu.com/p/249193f54df8" target="_blank" rel="noopener">surfer</a>/<a href="https://www.jianshu.com/p/d59774c9bc76" target="_blank" rel="noopener">python</a>绘制等值线图即可</td><td>高潮</td></tr><tr><td>4.沉积微相图</td><td>依据所给出的基本该油藏基本沉积微相表，找相同</td><td>在考虑地质规律，结合砂泥厚度比下，结合砂岩等厚图，用Coreldraw的图层管理快捷地完成沉积微相图的绘制工作</td><td>过渡</td></tr><tr><td>5.油藏剖面图</td><td>总结考虑四个等值线图及沉积微相图，确定油水界面</td><td>选取1中的某一条剖面线，标定出油水界面海拔高即可。推荐用Coreldraw绘制该图（用<strong>petrel</strong>是被要<strong>扣分</strong>的，别问我为什么知道）</td><td>尾声</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;提要&quot;&gt;&lt;a href=&quot;#提要&quot; class=&quot;headerlink&quot; title=&quot;提要&quot;&gt;&lt;/a&gt;提要&lt;/h1&gt;&lt;h4 id=&quot;由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。&quot;&gt;&lt;a href=&quot;#由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。&quot; class=&quot;headerlink&quot; title=&quot;由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。&quot;&gt;&lt;/a&gt;由于我是采用回忆的方法来总结经验，诸多考虑不到的地方，请多包含。&lt;/h4&gt;&lt;p&gt;您可以直接或通过邮件的方式咨询。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="作业思路" scheme="http://raydied.tk/tags/%E4%BD%9C%E4%B8%9A%E6%80%9D%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>github_hexo_独立域名</title>
    <link href="http://raydied.tk/2017/12/28/github-hexo-%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D/"/>
    <id>http://raydied.tk/2017/12/28/github-hexo-独立域名/</id>
    <published>2017-12-28T13:24:51.000Z</published>
    <updated>2017-12-29T16:40:17.299Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="三步走"><a href="#三步走" class="headerlink" title="三步走"></a>三步走</h1><h2 id="·申请独立顶级域名"><a href="#·申请独立顶级域名" class="headerlink" title="·申请独立顶级域名"></a>·申请独立顶级域名</h2><p>免费申请的<a href="https://my.freenom.com/clientarea.php" target="_blank" rel="noopener">网站</a>。 <strong>注意</strong>，可能要翻墙。最多可以申请12个月的<strong>免费</strong>。<a id="more"></a>网站人性化的设计及引导，你完全可以自己独立申请并完成注册。</p><h3 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h3><p>如果你刨根问底——域名和DNS的关系，直接<a href="https://www.google.com/search?q=%E5%9F%9F%E5%90%8D%E5%92%8Cdns%E8%A7%A3%E6%9E%90%E7%9A%84%E5%85%B3%E7%B3%BB&amp;oq=%E5%9F%9F%E5%90%8D%E5%92%8Cdns%E8%A7%A3%E6%9E%90%E7%9A%84%E5%85%B3%E7%B3%BB&amp;aqs=chrome..69i57.8944j0j4&amp;sourceid=chrome&amp;ie=UTF-8" target="_blank" rel="noopener">google</a>要更好。</p><ol><li><p><img src="/2017/12/28/github-hexo-独立域名/markdown-img-paste-20171228213916506.png" alt=""></p></li><li><p><img src="/2017/12/28/github-hexo-独立域名/markdown-img-paste-20171228213944996.png" alt=""></p></li><li><p><img src="/2017/12/28/github-hexo-独立域名/markdown-img-paste-20171228214021848.png" alt=""></p><h2 id="·DNSpod解析"><a href="#·DNSpod解析" class="headerlink" title="·DNSpod解析"></a>·DNSpod解析</h2><p>提供<a href="https://www.dnspod.cn/" target="_blank" rel="noopener">DNS</a>解析服务。</p><h3 id="1-配置解析"><a href="#1-配置解析" class="headerlink" title="1.配置解析"></a>1.配置解析</h3><p><img src="/2017/12/28/github-hexo-独立域名/markdown-img-paste-20171228214727527.png" alt=""></p><h3 id="2-CNAME"><a href="#2-CNAME" class="headerlink" title="2.CNAME"></a>2.CNAME</h3><p>新建CNAME，<strong>内容，</strong> 形如：raydied.tk，即你自己的域名。</p><h2 id="·上传"><a href="#·上传" class="headerlink" title="·上传"></a>·上传</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;三步走&quot;&gt;&lt;a href=&quot;#三步走&quot; class=&quot;headerlink&quot; title=&quot;三步走&quot;&gt;&lt;/a&gt;三步走&lt;/h1&gt;&lt;h2 id=&quot;·申请独立顶级域名&quot;&gt;&lt;a href=&quot;#·申请独立顶级域名&quot; class=&quot;headerlink&quot; title=&quot;·申请独立顶级域名&quot;&gt;&lt;/a&gt;·申请独立顶级域名&lt;/h2&gt;&lt;p&gt;免费申请的&lt;a href=&quot;https://my.freenom.com/clientarea.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;网站&lt;/a&gt;。 &lt;strong&gt;注意&lt;/strong&gt;，可能要翻墙。最多可以申请12个月的&lt;strong&gt;免费&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://raydied.tk/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>yilia_trouble</title>
    <link href="http://raydied.tk/2017/12/27/yaliy-trouble/"/>
    <id>http://raydied.tk/2017/12/27/yaliy-trouble/</id>
    <published>2017-12-27T03:33:06.000Z</published>
    <updated>2018-01-02T17:49:52.261Z</updated>
    
    <content type="html"><![CDATA[<hr><h1 id="hexo-yilia配置"><a href="#hexo-yilia配置" class="headerlink" title="hexo_yilia配置"></a>hexo_yilia配置</h1><h3 id="等待与clean"><a href="#等待与clean" class="headerlink" title="等待与clean"></a>等待与clean</h3><ol><li>本地的网页渲染，<a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -s</span><br></pre></td></tr></table></figure></li></ol><p>可以直接保存md、刷新浏览器，即可预览。<br>2.同步到github上的md，则需要等待。<strong>注意</strong>，当等待一会儿之后，仍不能与本地预览相同时，则需要<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo -g</span><br><span class="line">hexo -s #(可跳过)[效果同“hexo -g”+“预览”]</span><br><span class="line">hexo -d</span><br></pre></td></tr></table></figure></p><h3 id="空格和编码"><a href="#空格和编码" class="headerlink" title="空格和编码"></a>空格和编码</h3><ol><li>无论是在配置根目录下的<strong>_config.yml</strong>还是后期<strong>theme</strong>设置中的<strong>_config.yml</strong>，<br>冒号后面的空格号都不能忽略。</li><li>尽管你已经配置了根目录下的<strong>_config.yml</strong>中的<strong>language</strong>的设置为中文。例如：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">subtitle:</span> <span class="string">因为悲观</span> <span class="string">所以长乐</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -s</span><br></pre></td></tr></table></figure><p>之后，subtitle仍然<strong>乱码</strong>。</p><h4 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h4><p>只需要将文本保存的编码改为<strong>utf-8</strong>，包括.yml(配置文件),md（博客文件）<br><img src="/2017/12/27/yaliy-trouble/utf8.png" alt="utf8"></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><h3 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h3><p> 头像、打赏、md中所提添加的图片<a href="https://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="noopener">需要特别注意</a>。凡是采用主题之后的，须一致的放入<strong>/img/xxx.png</strong>(jpg等)。</p><h1 id="markdown编辑"><a href="#markdown编辑" class="headerlink" title="markdown编辑"></a>markdown编辑</h1><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>markdownd<a href="http://www.cnblogs.com/liugang-vip/p/6337580.html" target="_blank" rel="noopener">语法</a></p><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><p>我用的是<strong>Atom</strong>，因为它有丰富的<a href="http://www.cnblogs.com/fanzhidongyzby/p/6637084.html" target="_blank" rel="noopener">插件</a>。当然，多数量的插件会导致软件本身冗余；本末倒置。</p><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p><img src="/2017/12/27/yaliy-trouble/extension.png" alt="ex"></p><h4 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h4><table><thead><tr><th>拓展</th><th>作用</th></tr></thead><tbody><tr><td>markdown-preview-plus</td><td>增强预览</td></tr><tr><td>markdown-image-paste</td><td>图片粘贴</td></tr><tr><td>markdown-table-editor</td><td>表格编辑</td></tr><tr><td>markdown-scroll-sync</td><td>同步滚动</td></tr><tr><td>markdown-writer</td><td>md编辑</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;hexo-yilia配置&quot;&gt;&lt;a href=&quot;#hexo-yilia配置&quot; class=&quot;headerlink&quot; title=&quot;hexo_yilia配置&quot;&gt;&lt;/a&gt;hexo_yilia配置&lt;/h1&gt;&lt;h3 id=&quot;等待与clean&quot;&gt;&lt;a href=&quot;#等待与clean&quot; class=&quot;headerlink&quot; title=&quot;等待与clean&quot;&gt;&lt;/a&gt;等待与clean&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;本地的网页渲染，&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://raydied.tk/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Azure</title>
    <link href="http://raydied.tk/2017/12/26/azure/"/>
    <id>http://raydied.tk/2017/12/26/azure/</id>
    <published>2017-12-26T05:59:59.000Z</published>
    <updated>2018-01-02T14:16:04.019Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Can-you-see-it"><a href="#Can-you-see-it" class="headerlink" title="Can you see it ?"></a>Can you see it ?</h2><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yingying</span><br></pre></td></tr></table></figure><p>More info: <a href="https://vocaroo.com/i/s0gOckxceWAG" target="_blank" rel="noopener">…</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h2 id=&quot;Can-you-see-it&quot;&gt;&lt;a href=&quot;#Can-you-see-it&quot; class=&quot;headerlink&quot; title=&quot;Can you see it ?&quot;&gt;&lt;/a&gt;Can you see it ?&lt;/h2&gt;
    
    </summary>
    
    
      <category term="Thankful" scheme="http://raydied.tk/tags/Thankful/"/>
    
  </entry>
  
  <entry>
    <title>python的切片是什么</title>
    <link href="http://raydied.tk/2017/12/26/python/"/>
    <id>http://raydied.tk/2017/12/26/python/</id>
    <published>2017-12-25T16:00:00.000Z</published>
    <updated>2017-12-29T16:41:19.610Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong>切片</strong>用来表达<strong>选择</strong>的语法。<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fruit = [<span class="string">"apple"</span>,<span class="string">"banana"</span>,<span class="string">"cherry"</span>,<span class="string">"peach"</span>]</span><br><span class="line"><span class="comment">#选择性打印</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fruits[<span class="number">0</span>:<span class="number">-1</span>:<span class="number">2</span>]:</span><br><span class="line">    print(i)</span><br><span class="line">print(fruit[a:b:c])<span class="comment">#其中a,b表达选择的起，止。c表达选择的步长。</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;&lt;strong&gt;切片&lt;/strong&gt;用来表达&lt;strong&gt;选择&lt;/strong&gt;的语法。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="pythoning" scheme="http://raydied.tk/tags/pythoning/"/>
    
  </entry>
  
</feed>
